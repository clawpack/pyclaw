language: python
env:
  - TEST_PACKAGE="pyclaw"
  - TEST_PACKAGE="petclaw"
python:
  - 2.7
  - 3.5
before_install:
  - sudo apt-get update -qq
  - sudo apt-get install -qq gfortran liblapack-pic
  - sudo apt-get install pv liblapack-dev;
  - git clone --branch=master --depth=100 --quiet git://github.com/clawpack/clawpack
  - cd clawpack
  - git submodule init
  - git submodule update clawutil visclaw riemann
  - rm -rf pyclaw
  - ln -s ../ pyclaw
install:
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a
  - conda install --yes python=$TRAVIS_PYTHON_VERSION mpi4py 
  - conda install --yes python=$TRAVIS_PYTHON_VERSION matplotlib nose scipy coverage
  - conda install -c mikaem/label/ubuntu1604-host-gcc h5py
  - conda install --channel https://conda.anaconda.org/mikaem h5py
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      conda install --yes -c dan_blanchard python-coveralls;
      conda install --yes -c minrk petsc4py;
    else
      conda install --yes -c BjornFjohansson python-coveralls;
      conda install --yes -c conda-forge petsc4py;
    fi
  - conda install --yes python=$TRAVIS_PYTHON_VERSION scipy=0.17.1
  - python -c "import scipy; print(scipy.__version__)"
  - python setup.py install

script:
  - cd pyclaw/src/pyclaw
  - nosetests --first-pkg-wins --with-doctest --exclude=limiters --exclude=sharpclaw --exclude=io --exclude=example --with-coverage --cover-package=clawpack.pyclaw
  - mv .coverage temp
  - if [[ "${TEST_PACKAGE}" == "pyclaw" ]]; then
        nosetests -v --first-pkg-wins --exclude=limiters --exclude=sharpclaw --with-coverage --cover-package=clawpack.pyclaw --include=IOTest;
    fi
  - if [[ "${TEST_PACKAGE}" == "petclaw" ]]; then
       mpirun -n 4 nosetests -v --first-pkg-wins --exclude=limiters --exclude=sharpclaw --exclude=io;
    fi
  - if [[ "${TEST_PACKAGE}" == "petclaw" ]]; then
       cd ../petclaw/tests;
       mpirun -n 4 nosetests -v --first-pkg-wins --include=IOTest;
    fi
  - if [[ "${TEST_PACKAGE}" == "petclaw" ]]; then
       cd ../../pyclaw;
    fi
  - mv temp .coverage.doctest
  - coverage combine

after_success:
  - coveralls

notifications:
  email: false
